<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>总结 on 南宫乘风</title>
        <link>https://www.ownit.top/tags/%E6%80%BB%E7%BB%93/</link>
        <description>Recent content in 总结 on 南宫乘风</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 10 Dec 2019 15:13:46 +0000</lastBuildDate><atom:link href="https://www.ownit.top/tags/%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Docker命令总结</title>
        <link>https://www.ownit.top/p/201912101513/</link>
        <pubDate>Tue, 10 Dec 2019 15:13:46 +0000</pubDate>
        
        <guid>https://www.ownit.top/p/201912101513/</guid>
        <description>&lt;img src="https://www.ownit.top/title_pic/52.jpg" alt="Featured image of post Docker命令总结" /&gt;&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/20191210150243559.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;attach&lt;/strong&gt;    Attach to a running container                 # 当前 shell 下 attach 连接指定运行镜像&lt;/li&gt;
&lt;li&gt;**build  **   Build an image from a Dockerfile              # 通过 Dockerfile 定制镜像&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;commit&lt;/strong&gt;    Create a new image from a container changes   # 提交当前容器为新的镜像&lt;/li&gt;
&lt;li&gt;**cp   **     Copy files/folders from the containers filesystem to the host path   #从容器中拷贝指定文件或者目录到宿主机中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;create&lt;/strong&gt; Create a new container                        # 创建一个新的容器，同 run，但不启动容器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;diff&lt;/strong&gt;      Inspect changes on a container&amp;rsquo;s filesystem   # 查看 docker 容器变化&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;events&lt;/strong&gt;    Get real time events from the server          # 从 docker 服务获取容器实时事件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;exec&lt;/strong&gt;      Run a command in an existing container        # 在已存在的容器上运行命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;export&lt;/strong&gt;    Stream the contents of a container as a tar archive   # 导出容器的内容流作为一个 tar 归档文件[对应 import ]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;history&lt;/strong&gt; Show the history of an image                  # 展示一个镜像形成历史&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;images&lt;/strong&gt; List images                                   # 列出系统当前镜像&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;import&lt;/strong&gt;    Create a new filesystem image from the contents of a tarball # 从tar包中的内容创建一个新的文件系统映像[对应export]&lt;/li&gt;
&lt;li&gt;**info  **    Display system-wide information               # 显示系统相关信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inspect&lt;/strong&gt; Return low-level information on a container   # 查看容器详细信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;kill&lt;/strong&gt;      Kill a running container                      # kill 指定 docker 容器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;load&lt;/strong&gt; Load an image from a tar archive              # 从一个 tar 包中加载一个镜像[对应 save]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;login&lt;/strong&gt; Register or Login to the docker registry server    # 注册或者登陆一个 docker 源服务器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;logout&lt;/strong&gt;    Log out from a Docker registry server          # 从当前 Docker registry 退出&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;logs&lt;/strong&gt;      Fetch the logs of a container                 # 输出当前容器日志信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;      Lookup the public-facing port which is NAT-ed to PRIVATE_PORT    # 查看映射端口对应的容器内部源端口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pause&lt;/strong&gt;     Pause all processes within a container        # 暂停容器&lt;/li&gt;
&lt;li&gt;**ps  **      List containers                               # 列出容器列表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pull&lt;/strong&gt;      Pull an image or a repository from the docker registry server   # 从docker镜像源服务器拉取指定镜像或者库镜像&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;push&lt;/strong&gt;      Push an image or a repository to the docker registry server    # 推送指定镜像或者库镜像至docker源服务器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;restart&lt;/strong&gt; Restart a running container                   # 重启运行的容器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rm&lt;/strong&gt;        Remove one or more containers                 # 移除一个或者多个容器&lt;/li&gt;
&lt;li&gt;**rmi  **     Remove one or more images             # 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;run&lt;/strong&gt;       Run a command in a new container              # 创建一个新的容器并运行一个命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;save&lt;/strong&gt;      Save an image to a tar archive                # 保存一个镜像为一个 tar 包[对应 load]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;search&lt;/strong&gt;    Search for an image on the Docker Hub         # 在 docker hub 中搜索镜像&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;start&lt;/strong&gt;     Start a stopped containers                    # 启动容器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;stop&lt;/strong&gt; Stop a running containers                     # 停止容器&lt;/li&gt;
&lt;li&gt;**tag  **     Tag an image into a repository                # 给源中镜像打标签&lt;/li&gt;
&lt;li&gt;**top  **     Lookup the running processes of a container   # 查看容器中运行的进程信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;unpause&lt;/strong&gt; Unpause a paused container                    # 取消暂停容器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;version&lt;/strong&gt; Show the docker version information           # 查看 docker 版本号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wait&lt;/strong&gt; Block until a container stops, then print its exit code   # 截取容器停止时的退出状态值&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
