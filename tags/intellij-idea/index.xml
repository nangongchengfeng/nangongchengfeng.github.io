<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>intellij-idea on 南宫乘风</title>
        <link>https://www.ownit.top/tags/intellij-idea/</link>
        <description>Recent content in intellij-idea on 南宫乘风</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 06 Sep 2023 15:14:42 +0000</lastBuildDate><atom:link href="https://www.ownit.top/tags/intellij-idea/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>IntelliJ IDEA远程调试：使用IDEA Remote Debug进行高效调试的指南</title>
        <link>https://www.ownit.top/p/202309061514/</link>
        <pubDate>Wed, 06 Sep 2023 15:14:42 +0000</pubDate>
        
        <guid>https://www.ownit.top/p/202309061514/</guid>
        <description>&lt;img src="https://www.ownit.top/title_pic/25.jpg" alt="Featured image of post IntelliJ IDEA远程调试：使用IDEA Remote Debug进行高效调试的指南" /&gt;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;p&gt;在开发分布式系统时，调试是一个重要但复杂的环节。开发者通常需要跨越多个服务、模块和线程来追踪和解决问题。在没有远程调试的情况下，许多开发者会在代码中添加各种日志语句，然后重新部署和上线来调试。这种方法不仅费时，而且可能引入额外的错误或问题。&lt;/p&gt;
&lt;p&gt;有时候，在本地环境中调试时没有发现问题，但当代码被打包并部署到测试环境时，却会出现一堆莫名其妙的问题。这可能是因为不同的环境、配置或服务之间的交互导致了问题的出现。&lt;/p&gt;
&lt;p&gt;幸运的是，有一种强大的工具可以帮助解决这些问题，那就是远程调试。通过远程调试，开发者可以在远程服务器上直接对Java应用程序进行调试，就像在本地环境中一样。这样，就可以避免重新部署和上线的耗时过程，并且可以实时查看和修改变量的值、查看堆栈信息等。&lt;/p&gt;
&lt;p&gt;本文将介绍如何使用IntelliJ IDEA的远程调试功能来高效调试分布式系统。此外，我们还将探讨一些常见的调试问题和解决方法，帮助你更好地应对分布式系统开发中的挑战。&lt;/p&gt;
&lt;h2 id=&#34;1准备工作&#34;&gt;1、准备工作&lt;/h2&gt;
&lt;p&gt;1、确保你的IDEA已经安装并配置好，且已安装了Java开发工具包（JDK）。
确保你的Java应用程序已经部署到远程服务器上，并且可以通过远程访问进行调试。&lt;/p&gt;
&lt;h2 id=&#34;2启动调试应用&#34;&gt;2、启动调试应用&lt;/h2&gt;
&lt;p&gt;使用特定JVM参数运行服务端代码
要让远程服务器运行的代码支持远程调试，则启动的时候必须加上特定的JVM参数，这些参数是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-Xdebug -Xrunjdwp:transport&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;dt_socket,suspend&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;n,server&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;y,address&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;debug_port&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;或者
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-Xdebug -Xrunjdwp:transport&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;dt_socket,suspend&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;n,server&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;y,address&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;127.0.0.1:5555
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;将address设置为127.0.0.1:5555，表示将调试端口限制为本地访问，远程无法访问， 设置参数应该注意
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中的${debug_port}是用户自定义的，为debug端口，本例以5005端口为例。
如果只是临时调试，在端口号前面不要加上限制访问的IP地址，调试完成之后，将上述JVM参数去除掉之后重新发布下，防范开放远程调试端口可能带来的安全风险。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java  -Dspring.config.location&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;application-pre.yml  -Xdebug -Xrunjdwp:transport&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;dt_socket,address&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;5005,server&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;y,suspend&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;n -jar  fubaodai-app-1.0-SNAPSHOT.jar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/09015b658c2a45d1a87874f6b7e9d8fb.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;在这里插入图片描述&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;3配置远程调试&#34;&gt;3、配置远程调试&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在IDEA中，打开&amp;quot;Run/Debug Configurations&amp;quot;对话框。&lt;/li&gt;
&lt;li&gt;在对话框中，点击&amp;quot;+&amp;ldquo;按钮，选择&amp;quot;Remote&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;在弹出的对话框中，填写远程服务器的连接信息，包括服务器IP地址、端口号、调试协议等。&lt;/li&gt;
&lt;li&gt;点击&amp;quot;OK&amp;quot;按钮保存配置。
&lt;img src=&#34;https://www.ownit.top/../../image/305ea062503941f488521c47935c62e1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;在这里插入图片描述&#34;
	
	
&gt;
&lt;img src=&#34;https://www.ownit.top/../../image/4721fe8e84f04e21ae1e9dd1acbb4441.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;在这里插入图片描述&#34;
	
	
&gt;
或者 Remote
&lt;img src=&#34;https://www.ownit.top/../../image/e8f9c4045ec646c8a7116d01fb33fbf0.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;在这里插入图片描述&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;4本地idea启动debug模式&#34;&gt;4、本地IDEA启动debug模式&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/36ec5d9abe0f494799653822235dcce1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;在这里插入图片描述&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;**要求：**双方代码一致，否则远程调试无法启动；
本地启动刚刚配置的 Remote Server，正常时会看到日志:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Connected to the target VM, address: &lt;span class=&#34;s1&#34;&gt;&amp;#39;xxx:5005&amp;#39;&lt;/span&gt;, transport: &lt;span class=&#34;s1&#34;&gt;&amp;#39;socket&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/956d7ffa67f1429eb4b3cbc432c451e5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;在这里插入图片描述&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;5设置断点开始调试&#34;&gt;5、设置断点，开始调试&lt;/h2&gt;
&lt;p&gt;本地 IDEA 代码中设置断点
浏览器或手机 HTTP 访问服务器
IDEA 即可在断点暂停并跟踪
&lt;img src=&#34;https://www.ownit.top/../../image/56e130c4203f4d1084d652156475f0a3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;在这里插入图片描述&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;6远程调试的问题和注意事项&#34;&gt;6、远程调试的问题和注意事项&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;确保远程服务器的Java版本和IDEA的Java版本一致。&lt;/li&gt;
&lt;li&gt;确保远程服务器的防火墙设置允许IDEA的调试连接通过。&lt;/li&gt;
&lt;li&gt;确保远程服务器上已经安装了所需的调试工具（如jdb）。&lt;/li&gt;
&lt;li&gt;在远程调试时，需要注意保护敏感信息，如密码、密钥等。&lt;/li&gt;
&lt;li&gt;在修改代码时，需要同步远程服务器上的代码，以免出现版本不一致的问题。&lt;/li&gt;
&lt;/ol&gt;</description>
        </item>
        
    </channel>
</rss>
