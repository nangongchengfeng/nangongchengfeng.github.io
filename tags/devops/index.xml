<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>devops on 南宫乘风</title>
        <link>https://www.ownit.top/tags/devops/</link>
        <description>Recent content in devops on 南宫乘风</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 17 May 2022 09:41:41 +0000</lastBuildDate><atom:link href="https://www.ownit.top/tags/devops/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Jenkins入门配置</title>
        <link>https://www.ownit.top/p/202205170941/</link>
        <pubDate>Tue, 17 May 2022 09:41:41 +0000</pubDate>
        
        <guid>https://www.ownit.top/p/202205170941/</guid>
        <description>&lt;img src="https://www.ownit.top/title_pic/21.jpg" alt="Featured image of post Jenkins入门配置" /&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/heian_99/article/details/124808858&#34;  title=&#34;Jenkins安装部署使用_南宫乘风的博客-CSDN博客&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jenkins安装部署使用_南宫乘风的博客-CSDN博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装可以参考这篇文章，后续在这基础进行构建&lt;/p&gt;
&lt;p&gt;由于Jenkins需要从Git拉取代码、需要本地构建、甚至需要直接发布自定义镜像到Docker仓库，所以Jenkins需要配置大量内容。&lt;/p&gt;
&lt;h2 id=&#34;构建任务&#34;&gt;构建任务&lt;/h2&gt;
&lt;p&gt;准备好GitLab仓库中的项目，并且通过Jenkins配置项目的实现当前项目的&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;DevOps&lt;/a&gt;基本流程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建Maven工程发布到GitLab（Gitee、Github均可）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gitee.com/chengfeng99/java-demo.git&#34;  title=&#34;java-demo: api-gateway-demo&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;java-demo: api-gateway-demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/68376a7ce8ca4c899fab549b343f8d99.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Jenkins点击左侧导航新建任务&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/c2c788114a9a4d34adda9b09b04d4368.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;选择自由风格构建任务&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/d7dc787fda9f488590cb170d6c204511.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置源码拉取地址&#34;&gt;配置源码拉取地址&lt;/h2&gt;
&lt;p&gt;Jenkins需要将Git上存放的源码存储到Jenkins服务所在磁盘的本地&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置任务源码拉取的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/659875aca631427e9080a73110077e9f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Jenkins立即构建&lt;/p&gt;
&lt;p&gt;点击任务demo中的立即构建&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/12c022a48dcb41fa9a4f8c6ccb96df39.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 查看构建工程的日志，点击上述的任务条即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/3c9b59ae6e764ed2a98e5d4e38a82319.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可以看到源码已经拉取带Jenkins本地，可以根据第三行日志信息，查看Jenkins本地拉取到的源码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看Jenkins容器中&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;/var/jenkins_home/workspace/d&lt;/a&gt;emo的源码&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;源码存放位置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/fae77044512140059555ef614c6a4993.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置maven构建代码&#34;&gt;配置Maven构建代码&lt;/h2&gt;
&lt;p&gt;代码拉取到Jenkins本地后，需要在Jenkins中对代码进行构建，这里需要Maven的环境，而Maven需要Java的环境，接下来需要在Jenkins中安装JDK和Maven，并且配置到Jenkins服务。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;准备JDK、Maven压缩包通过数据卷映射到Jenkins容器内部&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/fdd9f7d5b22047918505ade55ba777ab.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 解压压缩包，并配置Maven的settings.xml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;!-- 阿里云镜像地址 --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;mirror&amp;gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;id&amp;gt;alimaven&amp;lt;/id&amp;gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;name&amp;gt;aliyun maven&amp;lt;/name&amp;gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;url&amp;gt;http://maven.aliyun.com/nexus/content/groups/public/&amp;lt;/url&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt;          
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/mirror&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;!-- JDK1.8编译插件 --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;profile&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;id&amp;gt;jdk-1.8&amp;lt;/id&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;activation&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;lt;activeByDefault&amp;gt;true&amp;lt;/activeByDefault&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;lt;jdk&amp;gt;1.8&amp;lt;/jdk&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;/activation&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;properties&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;lt;maven.compiler.source&amp;gt;1.8&amp;lt;/maven.compiler.source&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;lt;maven.compiler.target&amp;gt;1.8&amp;lt;/maven.compiler.target&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;lt;maven.compiler.compilerVersion&amp;gt;1.8&amp;lt;/maven.compiler.compilerVersion&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;lt;/properties&amp;gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/profile&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Jenkins配置JDK&amp;amp;Maven并保存&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/d2e8f8a9ffa34c38b8aac8833aa69821.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 配置Jenkins任务构建代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/2f68bbdb25aa478986424f9a06558099.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 立即构建测试，查看target下的jar包&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gitee.com/chengfeng99/java-demo.git&#34;  title=&#34;java-demo: api-gateway-demo&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;java-demo: api-gateway-demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/c323a7c4561e44dfb6c1a2caecd8acd8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置publish发布远程操作&#34;&gt;配置Publish发布&amp;amp;远程操作&lt;/h2&gt;
&lt;p&gt;jar包构建好之后，就可以根据情况发布到测试或生产环境，这里需要用到之前下载好的插件Publish Over SSH。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置Publish Over SSH连接测试、生产环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Publish Over SSH配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/04aa8a0941584adeb2060edcf22a85f3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&#34;https://www.ownit.top/../../image/f2eea35e4f034083959f283638e6f5bf.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 配置任务的构建后操作，发布jar包到目标服务&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/238250c6ba2944d19002ad5e0fb42bb9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&#34;https://www.ownit.top/../../image/4102647d71ac41e2be4e45b7b2e1e601.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&#34;https://www.ownit.top/../../image/5094833367134c6086282d76db0fd132.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/6dabff682161452e9b7ee1027f9b7aa5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 已经完成一次简单的构建交付&lt;/p&gt;
&lt;h2 id=&#34;持续交付部署&#34;&gt;持续交付、部署&lt;/h2&gt;
&lt;p&gt;程序代码在经过多次集成操作到达最终可以交付，持续交付整体流程和持续集成类似，不过需要选取指定的发行版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载Git Parameter插件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/1f595b7b5a0d404b8a6144ffd057d941.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;设置项目参数化构建&lt;/p&gt;
&lt;p&gt;基于Git标签构建&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/2fa818313a774b98acc2cbb5f5aba000.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/2c864ec677da4947a5168b76f12201af.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 给项目添加tag版本&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/ce487a64e8c14962b199940e75a5aa3e.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 任务构建时，采用Shell方式构建，拉取指定tag版本代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/099dbd89f8ce41f980a6f0272bb732fc.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt; 基于Parameter构建任务，任务发布到目标服务器&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/54a960e298ab425598b3062eeba170b3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
