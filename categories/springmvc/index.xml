<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>springmvc on 南宫乘风</title>
        <link>https://www.ownit.top/categories/springmvc/</link>
        <description>Recent content in springmvc on 南宫乘风</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 30 Aug 2019 15:03:46 +0000</lastBuildDate><atom:link href="https://www.ownit.top/categories/springmvc/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>三层架构介绍和MVC设计模型介绍</title>
        <link>https://www.ownit.top/p/201908301503/</link>
        <pubDate>Fri, 30 Aug 2019 15:03:46 +0000</pubDate>
        
        <guid>https://www.ownit.top/p/201908301503/</guid>
        <description>&lt;img src="https://www.ownit.top/title_pic/47.jpg" alt="Featured image of post 三层架构介绍和MVC设计模型介绍" /&gt;&lt;h1 id=&#34;springmvc是什么&#34;&gt;springmvc是什么?&lt;/h1&gt;
&lt;p&gt;Spring Web MVC是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架，即使用了MVC架构模式的思想，将web层&lt;/p&gt;
&lt;p&gt;进行职责解耦，基于请求驱动指的就是使用请求-响应模型，框架的目的就是帮助我们简化开发，Spring Web MVC也是要简化我们日常Web开发的。&lt;/p&gt;
&lt;h1 id=&#34;服务器端分成三层框架&#34;&gt;服务器端分成三层框架&lt;/h1&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;表现层：SpringMVC           包含JSP和Servlet等与WEB相关的内容&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;业务层：Spring框架            业务层中不包含JavaWeb API，它只关心业务逻辑&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;持久层：MyBatis                封装了对数据库的访问细节&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/20190830145419312.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;mvc设计模型&#34;&gt;MVC设计模型&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://www.ownit.top/../../image/aHR0cHM6Ly9pbWFnZXMyMDE1LmNuYmxvZ3MuY29tL2Jsb2cvNzc0MzI1LzIwMTYwMy83NzQzMjUtMjAxNjAzMjkxNDUyMjMzOTQtMjQ4MDMyODIuZ2lm&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;MVC 是一种使用 MVC（Model View Controller 模型-视图-控制器）设计创建 Web 应用程序的模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Model（模型）表示应用程序核心（比如数据库记录列表）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;View（视图）显示数据（数据库记录）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Controller（控制器）处理输入（写入数据库记录）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MVC 模式同时提供了对 HTML、CSS 和 JavaScript 的完全控制。&lt;/p&gt;
&lt;p&gt;**Model（模型）**是应用程序中用于处理应用程序数据逻辑的部分。&lt;br&gt;
　　通常模型对象负责在数据库中存取数据。&lt;/p&gt;
&lt;p&gt;**View（视图）**是应用程序中处理数据显示的部分。&lt;br&gt;
　　通常视图是依据模型数据创建的。&lt;/p&gt;
&lt;p&gt;**Controller（控制器）**是应用程序中处理用户交互的部分。&lt;br&gt;
　　通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
